// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: SgridPackage.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIdReq) Reset() {
	*x = QueryIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIdReq) ProtoMessage() {}

func (x *QueryIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIdReq.ProtoReflect.Descriptor instead.
func (*QueryIdReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{0}
}

func (x *QueryIdReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReleaseTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port   int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Ip     string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	GridId int32  `protobuf:"varint,3,opt,name=gridId,proto3" json:"gridId,omitempty"`
}

func (x *ReleaseTarget) Reset() {
	*x = ReleaseTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTarget) ProtoMessage() {}

func (x *ReleaseTarget) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTarget.ProtoReflect.Descriptor instead.
func (*ReleaseTarget) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseTarget) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ReleaseTarget) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReleaseTarget) GetGridId() int32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

type ReleaseServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName     string           `protobuf:"bytes,1,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FilePath       string           `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	ServerLanguage string           `protobuf:"bytes,3,opt,name=serverLanguage,proto3" json:"serverLanguage,omitempty"`
	ServerProtocol string           `protobuf:"bytes,4,opt,name=serverProtocol,proto3" json:"serverProtocol,omitempty"`
	ExecPath       string           `protobuf:"bytes,5,opt,name=execPath,proto3" json:"execPath,omitempty"`
	ServantGrids   []*ReleaseTarget `protobuf:"bytes,6,rep,name=servantGrids,proto3" json:"servantGrids,omitempty"`
	ServantId      int32            `protobuf:"varint,7,opt,name=servantId,proto3" json:"servantId,omitempty"`
}

func (x *ReleaseServerReq) Reset() {
	*x = ReleaseServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseServerReq) ProtoMessage() {}

func (x *ReleaseServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseServerReq.ProtoReflect.Descriptor instead.
func (*ReleaseServerReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseServerReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ReleaseServerReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ReleaseServerReq) GetServerLanguage() string {
	if x != nil {
		return x.ServerLanguage
	}
	return ""
}

func (x *ReleaseServerReq) GetServerProtocol() string {
	if x != nil {
		return x.ServerProtocol
	}
	return ""
}

func (x *ReleaseServerReq) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *ReleaseServerReq) GetServantGrids() []*ReleaseTarget {
	if x != nil {
		return x.ServantGrids
	}
	return nil
}

func (x *ReleaseServerReq) GetServantId() int32 {
	if x != nil {
		return x.ServantId
	}
	return 0
}

type PatchServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req []*PatchServerDto `protobuf:"bytes,1,rep,name=req,proto3" json:"req,omitempty"`
}

func (x *PatchServerReq) Reset() {
	*x = PatchServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchServerReq) ProtoMessage() {}

func (x *PatchServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchServerReq.ProtoReflect.Descriptor instead.
func (*PatchServerReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{3}
}

func (x *PatchServerReq) GetReq() []*PatchServerDto {
	if x != nil {
		return x.Req
	}
	return nil
}

// 单个拉起 不涉及服务文件覆盖
type PatchServerDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecPath       string `protobuf:"bytes,1,opt,name=execPath,proto3" json:"execPath,omitempty"`     // 执行路径
	ServerName     string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"` // 服务名，用于定位
	ServantId      int32  `protobuf:"varint,3,opt,name=servantId,proto3" json:"servantId,omitempty"`
	GridId         int32  `protobuf:"varint,4,opt,name=gridId,proto3" json:"gridId,omitempty"`
	Host           string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	ServerLanguage string `protobuf:"bytes,6,opt,name=serverLanguage,proto3" json:"serverLanguage,omitempty"`
	ServerProtocol string `protobuf:"bytes,7,opt,name=serverProtocol,proto3" json:"serverProtocol,omitempty"`
	Port           int32  `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PatchServerDto) Reset() {
	*x = PatchServerDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchServerDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchServerDto) ProtoMessage() {}

func (x *PatchServerDto) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchServerDto.ProtoReflect.Descriptor instead.
func (*PatchServerDto) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{4}
}

func (x *PatchServerDto) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *PatchServerDto) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *PatchServerDto) GetServantId() int32 {
	if x != nil {
		return x.ServantId
	}
	return 0
}

func (x *PatchServerDto) GetGridId() int32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *PatchServerDto) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PatchServerDto) GetServerLanguage() string {
	if x != nil {
		return x.ServerLanguage
	}
	return ""
}

func (x *PatchServerDto) GetServerProtocol() string {
	if x != nil {
		return x.ServerProtocol
	}
	return ""
}

func (x *PatchServerDto) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type BasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BasicResp) Reset() {
	*x = BasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResp) ProtoMessage() {}

func (x *BasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResp.ProtoReflect.Descriptor instead.
func (*BasicResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{5}
}

func (x *BasicResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasicResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 文件块消息定义
type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`      // 文件内容块
	Offset     int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 该块在文件中的偏移量
	ServerName string `protobuf:"bytes,3,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FileHash   string `protobuf:"bytes,4,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
	Index      int32  `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{6}
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileChunk) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *FileChunk) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *FileChunk) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type FileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileResp) Reset() {
	*x = FileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResp) ProtoMessage() {}

func (x *FileResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResp.ProtoReflect.Descriptor instead.
func (*FileResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{7}
}

func (x *FileResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ShutdownGridReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req []*ShutdownGridInfo `protobuf:"bytes,1,rep,name=req,proto3" json:"req,omitempty"`
}

func (x *ShutdownGridReq) Reset() {
	*x = ShutdownGridReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGridReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGridReq) ProtoMessage() {}

func (x *ShutdownGridReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGridReq.ProtoReflect.Descriptor instead.
func (*ShutdownGridReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{8}
}

func (x *ShutdownGridReq) GetReq() []*ShutdownGridInfo {
	if x != nil {
		return x.Req
	}
	return nil
}

type ShutdownGridInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid    int32  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`       // PID
	GridId int32  `protobuf:"varint,2,opt,name=gridId,proto3" json:"gridId,omitempty"` // 网格名称
	Host   string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`      // 主机
	Port   int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`     // 端口
}

func (x *ShutdownGridInfo) Reset() {
	*x = ShutdownGridInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGridInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGridInfo) ProtoMessage() {}

func (x *ShutdownGridInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGridInfo.ProtoReflect.Descriptor instead.
func (*ShutdownGridInfo) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{9}
}

func (x *ShutdownGridInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ShutdownGridInfo) GetGridId() int32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *ShutdownGridInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ShutdownGridInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetLogFileByHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	GridId     int64  `protobuf:"varint,3,opt,name=gridId,proto3" json:"gridId,omitempty"`
}

func (x *GetLogFileByHostReq) Reset() {
	*x = GetLogFileByHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileByHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileByHostReq) ProtoMessage() {}

func (x *GetLogFileByHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileByHostReq.ProtoReflect.Descriptor instead.
func (*GetLogFileByHostReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{10}
}

func (x *GetLogFileByHostReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetLogFileByHostReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetLogFileByHostReq) GetGridId() int64 {
	if x != nil {
		return x.GridId
	}
	return 0
}

type GetLogFileByHostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetLogFileByHostResp) Reset() {
	*x = GetLogFileByHostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileByHostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileByHostResp) ProtoMessage() {}

func (x *GetLogFileByHostResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileByHostResp.ProtoReflect.Descriptor instead.
func (*GetLogFileByHostResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{11}
}

func (x *GetLogFileByHostResp) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetLogFileByHostResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLogFileByHostResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLogByFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogType     uint32 `protobuf:"varint,1,opt,name=logType,proto3" json:"logType,omitempty"`
	Keyword     string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Host        string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	ServerName  string `protobuf:"bytes,4,opt,name=serverName,proto3" json:"serverName,omitempty"`
	GridId      uint32 `protobuf:"varint,5,opt,name=gridId,proto3" json:"gridId,omitempty"`
	LogFileName string `protobuf:"bytes,6,opt,name=logFileName,proto3" json:"logFileName,omitempty"`
	Len         uint32 `protobuf:"varint,7,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *GetLogByFileReq) Reset() {
	*x = GetLogByFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogByFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogByFileReq) ProtoMessage() {}

func (x *GetLogByFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogByFileReq.ProtoReflect.Descriptor instead.
func (*GetLogByFileReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{12}
}

func (x *GetLogByFileReq) GetLogType() uint32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *GetLogByFileReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetLogByFileReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetLogByFileReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetLogByFileReq) GetGridId() uint32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *GetLogByFileReq) GetLogFileName() string {
	if x != nil {
		return x.LogFileName
	}
	return ""
}

func (x *GetLogByFileReq) GetLen() uint32 {
	if x != nil {
		return x.Len
	}
	return 0
}

type GetLogByFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetLogByFileResp) Reset() {
	*x = GetLogByFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogByFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogByFileResp) ProtoMessage() {}

func (x *GetLogByFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogByFileResp.ProtoReflect.Descriptor instead.
func (*GetLogByFileResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{13}
}

func (x *GetLogByFileResp) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetLogByFileResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPidInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostPids []*HostPids `protobuf:"bytes,1,rep,name=hostPids,proto3" json:"hostPids,omitempty"`
}

func (x *GetPidInfoReq) Reset() {
	*x = GetPidInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPidInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPidInfoReq) ProtoMessage() {}

func (x *GetPidInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPidInfoReq.ProtoReflect.Descriptor instead.
func (*GetPidInfoReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{14}
}

func (x *GetPidInfoReq) GetHostPids() []*HostPids {
	if x != nil {
		return x.HostPids
	}
	return nil
}

type HostPids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid    int32  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Host   string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	GridId int64  `protobuf:"varint,3,opt,name=gridId,proto3" json:"gridId,omitempty"`
}

func (x *HostPids) Reset() {
	*x = HostPids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPids) ProtoMessage() {}

func (x *HostPids) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPids.ProtoReflect.Descriptor instead.
func (*HostPids) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{15}
}

func (x *HostPids) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *HostPids) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *HostPids) GetGridId() int64 {
	if x != nil {
		return x.GridId
	}
	return 0
}

type HostPidInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid         int32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Stat        string  `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Cpu         float32 `protobuf:"fixed32,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Threads     int64   `protobuf:"varint,4,opt,name=threads,proto3" json:"threads,omitempty"`
	Name        string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	IsRuning    string  `protobuf:"bytes,6,opt,name=isRuning,proto3" json:"isRuning,omitempty"`
	MemoryStack uint64  `protobuf:"varint,7,opt,name=memoryStack,proto3" json:"memoryStack,omitempty"`
	MemoryData  uint64  `protobuf:"varint,8,opt,name=memoryData,proto3" json:"memoryData,omitempty"`
}

func (x *HostPidInfo) Reset() {
	*x = HostPidInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPidInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPidInfo) ProtoMessage() {}

func (x *HostPidInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPidInfo.ProtoReflect.Descriptor instead.
func (*HostPidInfo) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{16}
}

func (x *HostPidInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *HostPidInfo) GetStat() string {
	if x != nil {
		return x.Stat
	}
	return ""
}

func (x *HostPidInfo) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *HostPidInfo) GetThreads() int64 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *HostPidInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostPidInfo) GetIsRuning() string {
	if x != nil {
		return x.IsRuning
	}
	return ""
}

func (x *HostPidInfo) GetMemoryStack() uint64 {
	if x != nil {
		return x.MemoryStack
	}
	return 0
}

func (x *HostPidInfo) GetMemoryData() uint64 {
	if x != nil {
		return x.MemoryData
	}
	return 0
}

type GetPidInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*HostPidInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPidInfoResp) Reset() {
	*x = GetPidInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPidInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPidInfoResp) ProtoMessage() {}

func (x *GetPidInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPidInfoResp.ProtoReflect.Descriptor instead.
func (*GetPidInfoResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{17}
}

func (x *GetPidInfoResp) GetData() []*HostPidInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeletePackageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FilePath   string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
}

func (x *DeletePackageReq) Reset() {
	*x = DeletePackageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageReq) ProtoMessage() {}

func (x *DeletePackageReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageReq.ProtoReflect.Descriptor instead.
func (*DeletePackageReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{18}
}

func (x *DeletePackageReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeletePackageReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *DeletePackageReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type GetSystemInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *SystemInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetSystemInfoResp) Reset() {
	*x = GetSystemInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResp) ProtoMessage() {}

func (x *GetSystemInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResp.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{19}
}

func (x *GetSystemInfoResp) GetData() *SystemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSystemInfoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSystemInfoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`                   // host
	CpuPercent    string `protobuf:"bytes,2,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`       // cpu使用率
	MemoryPercent string `protobuf:"bytes,3,opt,name=memoryPercent,proto3" json:"memoryPercent,omitempty"` // 内存使用率
	Nodes         string `protobuf:"bytes,4,opt,name=nodes,proto3" json:"nodes,omitempty"`                 // 服务总数
	CpuLength     string `protobuf:"bytes,5,opt,name=cpuLength,proto3" json:"cpuLength,omitempty"`         // cpu数量核数
	MemorySize    string `protobuf:"bytes,6,opt,name=memorySize,proto3" json:"memorySize,omitempty"`       // 内存大小
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{20}
}

func (x *SystemInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SystemInfo) GetCpuPercent() string {
	if x != nil {
		return x.CpuPercent
	}
	return ""
}

func (x *SystemInfo) GetMemoryPercent() string {
	if x != nil {
		return x.MemoryPercent
	}
	return ""
}

func (x *SystemInfo) GetNodes() string {
	if x != nil {
		return x.Nodes
	}
	return ""
}

func (x *SystemInfo) GetCpuLength() string {
	if x != nil {
		return x.CpuLength
	}
	return ""
}

func (x *SystemInfo) GetMemorySize() string {
	if x != nil {
		return x.MemorySize
	}
	return ""
}

type NotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GridId     int64  `protobuf:"varint,1,opt,name=gridId,proto3" json:"gridId,omitempty"`        // 节点ID gridId
	Info       string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`             // 告警信息 info
	ServerName string `protobuf:"bytes,3,opt,name=serverName,proto3" json:"serverName,omitempty"` // 服务名
}

func (x *NotifyReq) Reset() {
	*x = NotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReq) ProtoMessage() {}

func (x *NotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReq.ProtoReflect.Descriptor instead.
func (*NotifyReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{21}
}

func (x *NotifyReq) GetGridId() int64 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *NotifyReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *NotifyReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type InvokeWithCmdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`           // 命令
	GridId   int64  `protobuf:"varint,2,opt,name=gridId,proto3" json:"gridId,omitempty"`    // 节点ID
	InvokeId string `protobuf:"bytes,3,opt,name=invokeId,proto3" json:"invokeId,omitempty"` // 任务标识
}

func (x *InvokeWithCmdReq) Reset() {
	*x = InvokeWithCmdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeWithCmdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeWithCmdReq) ProtoMessage() {}

func (x *InvokeWithCmdReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeWithCmdReq.ProtoReflect.Descriptor instead.
func (*InvokeWithCmdReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{22}
}

func (x *InvokeWithCmdReq) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *InvokeWithCmdReq) GetGridId() int64 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *InvokeWithCmdReq) GetInvokeId() string {
	if x != nil {
		return x.InvokeId
	}
	return ""
}

type InvokeWithCmdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`         // 返回结果
	GridId   int64  `protobuf:"varint,2,opt,name=gridId,proto3" json:"gridId,omitempty"`    // 节点ID
	InvokeId string `protobuf:"bytes,3,opt,name=invokeId,proto3" json:"invokeId,omitempty"` // 任务标识
}

func (x *InvokeWithCmdRsp) Reset() {
	*x = InvokeWithCmdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeWithCmdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeWithCmdRsp) ProtoMessage() {}

func (x *InvokeWithCmdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeWithCmdRsp.ProtoReflect.Descriptor instead.
func (*InvokeWithCmdRsp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{23}
}

func (x *InvokeWithCmdRsp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *InvokeWithCmdRsp) GetGridId() int64 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *InvokeWithCmdRsp) GetInvokeId() string {
	if x != nil {
		return x.InvokeId
	}
	return ""
}

var File_SgridPackage_proto protoreflect.FileDescriptor

var file_SgridPackage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b,
	0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x10,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x6e, 0x74, 0x47, 0x72, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0e, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0xfa, 0x01, 0x0a, 0x0e,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x39, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x30, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x44, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x64, 0x0a, 0x10, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x61, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64,
	0x22, 0x58, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6c,
	0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x64, 0x73, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x50, 0x69, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x69,
	0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64,
	0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x70, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x67, 0x72, 0x69,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x70, 0x75, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58,
	0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6d, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6d, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x49, 0x64, 0x32, 0xf8, 0x06, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x53, 0x67, 0x72,
	0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x17, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e,
	0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x53, 0x67, 0x72, 0x69,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x47, 0x72, 0x69, 0x64, 0x12, 0x1e, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42,
	0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1e, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x61, 0x6b, 0x67, 0x65,
	0x12, 0x1f, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0d, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6d, 0x64, 0x12, 0x1f, 0x2e, 0x53, 0x67,
	0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x53,
	0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6d, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SgridPackage_proto_rawDescOnce sync.Once
	file_SgridPackage_proto_rawDescData = file_SgridPackage_proto_rawDesc
)

func file_SgridPackage_proto_rawDescGZIP() []byte {
	file_SgridPackage_proto_rawDescOnce.Do(func() {
		file_SgridPackage_proto_rawDescData = protoimpl.X.CompressGZIP(file_SgridPackage_proto_rawDescData)
	})
	return file_SgridPackage_proto_rawDescData
}

var file_SgridPackage_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_SgridPackage_proto_goTypes = []interface{}{
	(*QueryIdReq)(nil),           // 0: SgridProtocol.queryIdReq
	(*ReleaseTarget)(nil),        // 1: SgridProtocol.releaseTarget
	(*ReleaseServerReq)(nil),     // 2: SgridProtocol.releaseServerReq
	(*PatchServerReq)(nil),       // 3: SgridProtocol.patchServerReq
	(*PatchServerDto)(nil),       // 4: SgridProtocol.patchServerDto
	(*BasicResp)(nil),            // 5: SgridProtocol.basicResp
	(*FileChunk)(nil),            // 6: SgridProtocol.FileChunk
	(*FileResp)(nil),             // 7: SgridProtocol.FileResp
	(*ShutdownGridReq)(nil),      // 8: SgridProtocol.ShutdownGridReq
	(*ShutdownGridInfo)(nil),     // 9: SgridProtocol.ShutdownGridInfo
	(*GetLogFileByHostReq)(nil),  // 10: SgridProtocol.GetLogFileByHostReq
	(*GetLogFileByHostResp)(nil), // 11: SgridProtocol.GetLogFileByHostResp
	(*GetLogByFileReq)(nil),      // 12: SgridProtocol.GetLogByFileReq
	(*GetLogByFileResp)(nil),     // 13: SgridProtocol.GetLogByFileResp
	(*GetPidInfoReq)(nil),        // 14: SgridProtocol.GetPidInfoReq
	(*HostPids)(nil),             // 15: SgridProtocol.HostPids
	(*HostPidInfo)(nil),          // 16: SgridProtocol.HostPidInfo
	(*GetPidInfoResp)(nil),       // 17: SgridProtocol.GetPidInfoResp
	(*DeletePackageReq)(nil),     // 18: SgridProtocol.DeletePackageReq
	(*GetSystemInfoResp)(nil),    // 19: SgridProtocol.GetSystemInfoResp
	(*SystemInfo)(nil),           // 20: SgridProtocol.SystemInfo
	(*NotifyReq)(nil),            // 21: SgridProtocol.NotifyReq
	(*InvokeWithCmdReq)(nil),     // 22: SgridProtocol.InvokeWithCmdReq
	(*InvokeWithCmdRsp)(nil),     // 23: SgridProtocol.InvokeWithCmdRsp
	(*emptypb.Empty)(nil),        // 24: google.protobuf.Empty
}
var file_SgridPackage_proto_depIdxs = []int32{
	1,  // 0: SgridProtocol.releaseServerReq.servantGrids:type_name -> SgridProtocol.releaseTarget
	4,  // 1: SgridProtocol.patchServerReq.req:type_name -> SgridProtocol.patchServerDto
	9,  // 2: SgridProtocol.ShutdownGridReq.req:type_name -> SgridProtocol.ShutdownGridInfo
	15, // 3: SgridProtocol.GetPidInfoReq.hostPids:type_name -> SgridProtocol.HostPids
	16, // 4: SgridProtocol.GetPidInfoResp.data:type_name -> SgridProtocol.HostPidInfo
	20, // 5: SgridProtocol.GetSystemInfoResp.data:type_name -> SgridProtocol.SystemInfo
	6,  // 6: SgridProtocol.FileTransferService.StreamFile:input_type -> SgridProtocol.FileChunk
	2,  // 7: SgridProtocol.FileTransferService.ReleaseServerByPackage:input_type -> SgridProtocol.releaseServerReq
	3,  // 8: SgridProtocol.FileTransferService.PatchServer:input_type -> SgridProtocol.patchServerReq
	8,  // 9: SgridProtocol.FileTransferService.ShutdownGrid:input_type -> SgridProtocol.ShutdownGridReq
	10, // 10: SgridProtocol.FileTransferService.GetLogFileByHost:input_type -> SgridProtocol.GetLogFileByHostReq
	12, // 11: SgridProtocol.FileTransferService.GetLogByFile:input_type -> SgridProtocol.GetLogByFileReq
	14, // 12: SgridProtocol.FileTransferService.GetPidInfo:input_type -> SgridProtocol.GetPidInfoReq
	18, // 13: SgridProtocol.FileTransferService.DeletePacakge:input_type -> SgridProtocol.DeletePackageReq
	24, // 14: SgridProtocol.FileTransferService.GetSystemInfo:input_type -> google.protobuf.Empty
	21, // 15: SgridProtocol.FileTransferService.Notify:input_type -> SgridProtocol.NotifyReq
	22, // 16: SgridProtocol.FileTransferService.InvokeWithCmd:input_type -> SgridProtocol.InvokeWithCmdReq
	7,  // 17: SgridProtocol.FileTransferService.StreamFile:output_type -> SgridProtocol.FileResp
	5,  // 18: SgridProtocol.FileTransferService.ReleaseServerByPackage:output_type -> SgridProtocol.basicResp
	5,  // 19: SgridProtocol.FileTransferService.PatchServer:output_type -> SgridProtocol.basicResp
	5,  // 20: SgridProtocol.FileTransferService.ShutdownGrid:output_type -> SgridProtocol.basicResp
	11, // 21: SgridProtocol.FileTransferService.GetLogFileByHost:output_type -> SgridProtocol.GetLogFileByHostResp
	13, // 22: SgridProtocol.FileTransferService.GetLogByFile:output_type -> SgridProtocol.GetLogByFileResp
	17, // 23: SgridProtocol.FileTransferService.GetPidInfo:output_type -> SgridProtocol.GetPidInfoResp
	5,  // 24: SgridProtocol.FileTransferService.DeletePacakge:output_type -> SgridProtocol.basicResp
	19, // 25: SgridProtocol.FileTransferService.GetSystemInfo:output_type -> SgridProtocol.GetSystemInfoResp
	5,  // 26: SgridProtocol.FileTransferService.Notify:output_type -> SgridProtocol.basicResp
	23, // 27: SgridProtocol.FileTransferService.InvokeWithCmd:output_type -> SgridProtocol.InvokeWithCmdRsp
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_SgridPackage_proto_init() }
func file_SgridPackage_proto_init() {
	if File_SgridPackage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SgridPackage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchServerDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGridReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGridInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileByHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileByHostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogByFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogByFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPidInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPidInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPidInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePackageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeWithCmdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeWithCmdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SgridPackage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SgridPackage_proto_goTypes,
		DependencyIndexes: file_SgridPackage_proto_depIdxs,
		MessageInfos:      file_SgridPackage_proto_msgTypes,
	}.Build()
	File_SgridPackage_proto = out.File
	file_SgridPackage_proto_rawDesc = nil
	file_SgridPackage_proto_goTypes = nil
	file_SgridPackage_proto_depIdxs = nil
}
