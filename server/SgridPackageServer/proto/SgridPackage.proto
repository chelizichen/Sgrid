syntax = "proto3";  
  
package SgridProtocol;

option go_package = ".;protocol";

message queryIdReq {
    int32 id = 1;
}

message deletePackageReq{
    string serverName = 1;
    string filePath = 2;
}



message releaseTarget{
    int32 port = 1;
    string ip = 2;
    int32 gridId = 3;
}

message releaseServerReq{
    string serverName = 1;
    string filePath = 2;
    string serverLanguage = 3;
    string serverProtocol = 4;
    string execPath = 5;
    repeated releaseTarget servantGrids = 6;
}


message basicResp {
    int32 code = 1;
    string message = 2;
}

// 文件块消息定义  
message FileChunk {  
    bytes data = 1; // 文件内容块  
    int64 offset = 2; // 该块在文件中的偏移量  
    string serverName = 3;
    string fileHash = 4;
    int32 index = 5;
}

message FileResp {
    string msg = 1;
    int32 code = 2;
}

message ShutdownGridReq{
    repeated ShutdownGridInfo req = 1;
}

message ShutdownGridInfo{
    int32 pid = 1;  // PID
    int32 gridId = 2; // 网格名称
    string host = 3; // 主机
    int32 port = 4; // 端口
}


message GetLogFileByHostReq{
    string host = 1;
    string serverName = 2;
}

message GetLogFileByHostResp{
    repeated string fileName = 1;
}

message GetLogByFileReq{
    string logFile = 1;
    string pattern = 2;
    int32 rows = 3;
    string host = 4;
    string serverName = 5;
}

message GetLogByFileResp{
    string data = 1;
}

message GetPidInfoReq{
    repeated HostPids hostPids = 1;
}

message HostPids{
    int32 pid = 1;
    string host = 2;
    int64 gridId = 3;
}

message HostPidInfo{
    int32 pid = 1;
    string stat = 2;
    float cpu = 3;
    int64 threads = 4;
    string name = 5;
    string isRuning = 6;
    uint64 memoryStack = 7;
    uint64 memoryData = 8;
}

message GetPidInfoResp{
    repeated HostPidInfo data = 1;
}

// 文件传输服务定义  
service FileTransferService {  
    // 双向流式 RPC 用于文件传输  
    rpc StreamFile(stream FileChunk) returns (stream FileResp) {}  
    
    // 删除包
    rpc DeletePackage(deletePackageReq)returns(basicResp){}
    
    // 发布服务
    rpc ReleaseServerByPackage(releaseServerReq)returns(basicResp){}

    // 关闭指定节点服务
    rpc ShutdownGrid(ShutdownGridReq)returns(basicResp){}

    // 获取服务日志列表
    rpc GetLogFileByHost(GetLogFileByHostReq)returns(GetLogFileByHostResp){}

    // 获取服务日志
    rpc GetLogByFile(GetLogByFileReq)returns(GetLogByFileResp){}

    // 获取Pid信息 checkAlive
    rpc GetPidInfo(GetPidInfoReq)returns(GetPidInfoResp){}
}  
