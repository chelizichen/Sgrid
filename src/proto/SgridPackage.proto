syntax = "proto3";  
  
package SgridProtocol;

option go_package = ".;protocol";

message queryIdReq {
    int32 id = 1;
}

message deletePackageReq{
    string serverName = 1;
    string filePath = 2;
}



message releaseTarget{
    int32 port = 1;
    string ip = 2;
    int32 gridId = 3;
}

message releaseServerReq{
    string serverName = 1;
    string filePath = 2;
    string serverLanguage = 3;
    string serverProtocol = 4;
    string execPath = 5;
    repeated releaseTarget servantGrids = 6;
}


message basicResp {
    int32 code = 1;
    string message = 2;
}

// 文件块消息定义  
message FileChunk {  
    bytes data = 1; // 文件内容块  
    int64 offset = 2; // 该块在文件中的偏移量  
    string serverName = 3;
    string fileHash = 4;
}

message FileResp {
    string msg = 1;
    int32 code = 2;
}

message ShutdownGridReq{
    int32 pid = 1;
    int32 gridId = 2;
}

// 文件传输服务定义  
service FileTransferService {  
    // 双向流式 RPC 用于文件传输  
    rpc StreamFile(stream FileChunk) returns (stream FileResp) {}  
    
    // 删除包
    rpc DeletePackage(deletePackageReq)returns(basicResp){}
    
    // 发布服务
    rpc ReleaseServerByPackage(releaseServerReq)returns(basicResp){}

    // 关闭指定节点服务
    rpc ShutdownGrid(ShutdownGridReq)returns(basicResp){}
}  
