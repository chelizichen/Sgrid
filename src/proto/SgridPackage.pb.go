// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: SgridPackage.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIdReq) Reset() {
	*x = QueryIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIdReq) ProtoMessage() {}

func (x *QueryIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIdReq.ProtoReflect.Descriptor instead.
func (*QueryIdReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{0}
}

func (x *QueryIdReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePackageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FilePath   string `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
}

func (x *DeletePackageReq) Reset() {
	*x = DeletePackageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageReq) ProtoMessage() {}

func (x *DeletePackageReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageReq.ProtoReflect.Descriptor instead.
func (*DeletePackageReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{1}
}

func (x *DeletePackageReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *DeletePackageReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ReleaseTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port   int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Ip     string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	GridId int32  `protobuf:"varint,3,opt,name=gridId,proto3" json:"gridId,omitempty"`
}

func (x *ReleaseTarget) Reset() {
	*x = ReleaseTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTarget) ProtoMessage() {}

func (x *ReleaseTarget) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTarget.ProtoReflect.Descriptor instead.
func (*ReleaseTarget) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseTarget) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ReleaseTarget) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReleaseTarget) GetGridId() int32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

type ReleaseServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName     string           `protobuf:"bytes,1,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FilePath       string           `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	ServerLanguage string           `protobuf:"bytes,3,opt,name=serverLanguage,proto3" json:"serverLanguage,omitempty"`
	ServerProtocol string           `protobuf:"bytes,4,opt,name=serverProtocol,proto3" json:"serverProtocol,omitempty"`
	ExecPath       string           `protobuf:"bytes,5,opt,name=execPath,proto3" json:"execPath,omitempty"`
	ServantGrids   []*ReleaseTarget `protobuf:"bytes,6,rep,name=servantGrids,proto3" json:"servantGrids,omitempty"`
}

func (x *ReleaseServerReq) Reset() {
	*x = ReleaseServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseServerReq) ProtoMessage() {}

func (x *ReleaseServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseServerReq.ProtoReflect.Descriptor instead.
func (*ReleaseServerReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseServerReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ReleaseServerReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ReleaseServerReq) GetServerLanguage() string {
	if x != nil {
		return x.ServerLanguage
	}
	return ""
}

func (x *ReleaseServerReq) GetServerProtocol() string {
	if x != nil {
		return x.ServerProtocol
	}
	return ""
}

func (x *ReleaseServerReq) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *ReleaseServerReq) GetServantGrids() []*ReleaseTarget {
	if x != nil {
		return x.ServantGrids
	}
	return nil
}

type BasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BasicResp) Reset() {
	*x = BasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResp) ProtoMessage() {}

func (x *BasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResp.ProtoReflect.Descriptor instead.
func (*BasicResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{4}
}

func (x *BasicResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasicResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 文件块消息定义
type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`      // 文件内容块
	Offset     int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 该块在文件中的偏移量
	ServerName string `protobuf:"bytes,3,opt,name=serverName,proto3" json:"serverName,omitempty"`
	FileHash   string `protobuf:"bytes,4,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{5}
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileChunk) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *FileChunk) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

type FileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileResp) Reset() {
	*x = FileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResp) ProtoMessage() {}

func (x *FileResp) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResp.ProtoReflect.Descriptor instead.
func (*FileResp) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{6}
}

func (x *FileResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ShutdownGridReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req []*ShutdownGridInfo `protobuf:"bytes,1,rep,name=req,proto3" json:"req,omitempty"`
}

func (x *ShutdownGridReq) Reset() {
	*x = ShutdownGridReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGridReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGridReq) ProtoMessage() {}

func (x *ShutdownGridReq) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGridReq.ProtoReflect.Descriptor instead.
func (*ShutdownGridReq) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{7}
}

func (x *ShutdownGridReq) GetReq() []*ShutdownGridInfo {
	if x != nil {
		return x.Req
	}
	return nil
}

type ShutdownGridInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid    int32  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`       // PID
	GridId int32  `protobuf:"varint,2,opt,name=gridId,proto3" json:"gridId,omitempty"` // 网格名称
	Host   string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`      // 主机
	Port   int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`     // 端口
}

func (x *ShutdownGridInfo) Reset() {
	*x = ShutdownGridInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SgridPackage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGridInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGridInfo) ProtoMessage() {}

func (x *ShutdownGridInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SgridPackage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGridInfo.ProtoReflect.Descriptor instead.
func (*ShutdownGridInfo) Descriptor() ([]byte, []int) {
	return file_SgridPackage_proto_rawDescGZIP(), []int{8}
}

func (x *ShutdownGridInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ShutdownGridInfo) GetGridId() int32 {
	if x != nil {
		return x.GridId
	}
	return 0
}

func (x *ShutdownGridInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ShutdownGridInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_SgridPackage_proto protoreflect.FileDescriptor

var file_SgridPackage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x22, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4e, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x4b, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x22, 0xfc,
	0x01, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x69, 0x64, 0x73, 0x22, 0x39, 0x0a,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x73, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0x30, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x44, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x64, 0x0a, 0x10, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x47, 0x72, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x69,
	0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x32, 0xcd, 0x02, 0x0a, 0x13,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x17, 0x2e, 0x53, 0x67,
	0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x53, 0x67,
	0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x53,
	0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x12,
	0x1e, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x53, 0x67, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_SgridPackage_proto_rawDescOnce sync.Once
	file_SgridPackage_proto_rawDescData = file_SgridPackage_proto_rawDesc
)

func file_SgridPackage_proto_rawDescGZIP() []byte {
	file_SgridPackage_proto_rawDescOnce.Do(func() {
		file_SgridPackage_proto_rawDescData = protoimpl.X.CompressGZIP(file_SgridPackage_proto_rawDescData)
	})
	return file_SgridPackage_proto_rawDescData
}

var file_SgridPackage_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_SgridPackage_proto_goTypes = []interface{}{
	(*QueryIdReq)(nil),       // 0: SgridProtocol.queryIdReq
	(*DeletePackageReq)(nil), // 1: SgridProtocol.deletePackageReq
	(*ReleaseTarget)(nil),    // 2: SgridProtocol.releaseTarget
	(*ReleaseServerReq)(nil), // 3: SgridProtocol.releaseServerReq
	(*BasicResp)(nil),        // 4: SgridProtocol.basicResp
	(*FileChunk)(nil),        // 5: SgridProtocol.FileChunk
	(*FileResp)(nil),         // 6: SgridProtocol.FileResp
	(*ShutdownGridReq)(nil),  // 7: SgridProtocol.ShutdownGridReq
	(*ShutdownGridInfo)(nil), // 8: SgridProtocol.ShutdownGridInfo
}
var file_SgridPackage_proto_depIdxs = []int32{
	2, // 0: SgridProtocol.releaseServerReq.servantGrids:type_name -> SgridProtocol.releaseTarget
	8, // 1: SgridProtocol.ShutdownGridReq.req:type_name -> SgridProtocol.ShutdownGridInfo
	5, // 2: SgridProtocol.FileTransferService.StreamFile:input_type -> SgridProtocol.FileChunk
	1, // 3: SgridProtocol.FileTransferService.DeletePackage:input_type -> SgridProtocol.deletePackageReq
	3, // 4: SgridProtocol.FileTransferService.ReleaseServerByPackage:input_type -> SgridProtocol.releaseServerReq
	7, // 5: SgridProtocol.FileTransferService.ShutdownGrid:input_type -> SgridProtocol.ShutdownGridReq
	6, // 6: SgridProtocol.FileTransferService.StreamFile:output_type -> SgridProtocol.FileResp
	4, // 7: SgridProtocol.FileTransferService.DeletePackage:output_type -> SgridProtocol.basicResp
	4, // 8: SgridProtocol.FileTransferService.ReleaseServerByPackage:output_type -> SgridProtocol.basicResp
	4, // 9: SgridProtocol.FileTransferService.ShutdownGrid:output_type -> SgridProtocol.basicResp
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_SgridPackage_proto_init() }
func file_SgridPackage_proto_init() {
	if File_SgridPackage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SgridPackage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePackageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGridReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SgridPackage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGridInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SgridPackage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SgridPackage_proto_goTypes,
		DependencyIndexes: file_SgridPackage_proto_depIdxs,
		MessageInfos:      file_SgridPackage_proto_msgTypes,
	}.Build()
	File_SgridPackage_proto = out.File
	file_SgridPackage_proto_rawDesc = nil
	file_SgridPackage_proto_goTypes = nil
	file_SgridPackage_proto_depIdxs = nil
}
